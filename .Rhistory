library(renderthis)
to_pdf("EPFL_presentation.Rmd")
remotes::install_github('rstudio/chromote')
to_pdf("EPFL_presentation.Rmd")
to_pdf("EPFL_presentation.Rmd", complex_slides = TRUE)
install.packages('pdftools')
to_pdf("EPFL_presentation.Rmd", complex_slides = TRUE)
to_pdf("EPFL_presentation.Rmd", complex_slides = TRUE)
library(nowcaster)
# Loading Belo Horizonte SARI dataset
data(sragBH)
library(tidyverse)
View(sragBH)
View(sragBH)
## Objects by date
## Date of onset of symptons
count_dt_onset<-sragBH |>
group_by(DT_SIN_PRI) |>
tally()
## Date of report
count_dt_report<-sragBH |>
group_by(DT_DIGITA) |>
tally()
View(count_dt_onset)
## Plots
plt<-ggplot()+
geom_line(data=  count_dt_onset,
aes(x = DT_SIN_PRI, y = n, col = "Counts by date of onset"))+
geom_line(data=  count_dt_report,
aes(x = DT_DIGITA, y = n, col = "Counts by date of report"))+
theme_bw()
plt
plt2<-sragBH |>
group_by(DT_SIN_PRI, DT_DIGITA) |>
tally() |>
ggplot(aes(x = DT_SIN_PRI, y = n, col = DT_DIGITA))+
geom_line()+
theme_bw()
plt2
library("tidyverse")
library("cowplot")
library("plotly")
library("gganimate")
library("RColorBrewer")
library("transformr")
library("readr")
dados <- sragBH
dt.plot <- reshape2::melt(dados, id.vars = "Data")
dt.plot <- reshape2::melt(dados, id.vars = "DT_SIN_PRI")
View(dt.plot)
View(dt.plot)
dados <- sragBH
# Setting locale to Brasil
Sys.setlocale(category = "LC_TIME", locale = "pt_BR.UTF-8")
dados <- sragBH |>
group_by(DT_SIN_PRI, DT_DIGITA) |>
summarise(n= n())
nowc <-
ggplot(data = dados) +
geom_line(aes(x = DT_SIN_PRI, y = n, colour = factor(DT_DIGITA)), size = 2) +
geom_vline(aes(xintercept = DT_DIGITA, colour = factor(DT_DIGITA)), linetype = "dashed", size = 0.5, alpha = 0.5) +
geom_text(aes(x = variable - 7, y = 600, label = paste0("Data of report:\n", DT_DIGITA), colour = factor(DT_DIGITA)), size = 6) +
scale_x_date(date_labels = "%d/%B") +
scale_colour_viridis_d(direction = -1) +
labs(x = "Data do Óbito", y = "Número de Óbitos",
colour = "Data do Boletim",
title = "Evolução de Óbitos por Data de Óbito",
subtitle = "Observatório COVID19 BR; covid19br.github.io",
caption = "Fonte: Boletins Epidemiológicos do Ministério da Saúde e SIVEP-Gripe") +
#xlim(min(dt.plot$Data), max(dt.plot$Data) + 15) +
#ylim(0, 330) +
theme_cowplot() +
theme(legend.position = "none",
plot.title = element_text(hjust = 0.5, size = 22),
plot.subtitle = element_text(hjust = 0.5, size = 18),
axis.text.x = element_text(size = 16),
axis.text.y = element_text(size = 16),
axis.title.x = element_text(size = 18, face = "bold"),
axis.title.y = element_text(size = 18, face = "bold"),) +
transition_states(factor(variable)) +
shadow_mark(colour = "lightgrey", alpha = 0.5, size = 1, exclude_layer = c(2, 3))
library("tidyverse")
library("cowplot")
library("plotly")
library("gganimate")
library("RColorBrewer")
library("transformr")
library("readr")
install.packages("gganimate")
install.packages("transformr")
library("tidyverse")
library("cowplot")
library("plotly")
library("gganimate")
library("RColorBrewer")
library("transformr")
library("readr")
dados <- sragBH |>
group_by(DT_SIN_PRI, DT_DIGITA) |>
summarise(n= n())
# Setting locale to Brasil
Sys.setlocale(category = "LC_TIME", locale = "pt_BR.UTF-8")
nowc <-
ggplot(data = dados) +
geom_line(aes(x = DT_SIN_PRI, y = n, colour = factor(DT_DIGITA)), size = 2) +
geom_vline(aes(xintercept = DT_DIGITA, colour = factor(DT_DIGITA)), linetype = "dashed", size = 0.5, alpha = 0.5) +
geom_text(aes(x = variable - 7, y = 600, label = paste0("Data of report:\n", DT_DIGITA), colour = factor(DT_DIGITA)), size = 6) +
scale_x_date(date_labels = "%d/%B") +
scale_colour_viridis_d(direction = -1) +
labs(x = "Data do Óbito", y = "Número de Óbitos",
colour = "Data do Boletim",
title = "Evolução de Óbitos por Data de Óbito",
subtitle = "Observatório COVID19 BR; covid19br.github.io",
caption = "Fonte: Boletins Epidemiológicos do Ministério da Saúde e SIVEP-Gripe") +
#xlim(min(dt.plot$Data), max(dt.plot$Data) + 15) +
#ylim(0, 330) +
theme_cowplot() +
theme(legend.position = "none",
plot.title = element_text(hjust = 0.5, size = 22),
plot.subtitle = element_text(hjust = 0.5, size = 18),
axis.text.x = element_text(size = 16),
axis.text.y = element_text(size = 16),
axis.title.x = element_text(size = 18, face = "bold"),
axis.title.y = element_text(size = 18, face = "bold"),) +
transition_states(factor(variable)) +
shadow_mark(colour = "lightgrey", alpha = 0.5, size = 1, exclude_layer = c(2, 3))
animate(nowc,
duration = 30,
end_pause = 7,
width = 800,
height = 800)
nowc <-
ggplot(data = dados) +
geom_line(aes(x = DT_SIN_PRI, y = n, colour = factor(DT_DIGITA)), size = 2) +
geom_vline(aes(xintercept = DT_DIGITA, colour = factor(DT_DIGITA)), linetype = "dashed", size = 0.5, alpha = 0.5) +
geom_text(aes(x = variable - 7, y = 600, label = paste0("Data of report:\n", DT_DIGITA), colour = factor(DT_DIGITA)), size = 6) +
scale_x_date(date_labels = "%d/%B") +
scale_colour_viridis_d(direction = -1) +
labs(x = "Data do Óbito", y = "Número de Óbitos",
colour = "Data do Boletim",
title = "Evolução de Óbitos por Data de Óbito",
subtitle = "Observatório COVID19 BR; covid19br.github.io",
caption = "Fonte: Boletins Epidemiológicos do Ministério da Saúde e SIVEP-Gripe") +
#xlim(min(dt.plot$Data), max(dt.plot$Data) + 15) +
#ylim(0, 330) +
theme_cowplot() +
theme(legend.position = "none",
plot.title = element_text(hjust = 0.5, size = 22),
plot.subtitle = element_text(hjust = 0.5, size = 18),
axis.text.x = element_text(size = 16),
axis.text.y = element_text(size = 16),
axis.title.x = element_text(size = 18, face = "bold"),
axis.title.y = element_text(size = 18, face = "bold"),) +
transition_states(factor(DT_DIGITA)) +
shadow_mark(colour = "lightgrey", alpha = 0.5, size = 1, exclude_layer = c(2, 3))
animate(nowc,
duration = 30,
end_pause = 7,
width = 800,
height = 800)
library("tidyverse")
library("cowplot")
library("plotly")
library("gganimate")
library("RColorBrewer")
library("transformr")
library("readr")
dados <- sragBH |>
group_by(DT_SIN_PRI, DT_DIGITA) |>
summarise(n= n())
# Setting locale to Brasil
Sys.setlocale(category = "LC_TIME", locale = "pt_BR.UTF-8")
nowc <-
ggplot(data = dados) +
geom_line(aes(x = DT_SIN_PRI, y = n, colour = factor(DT_DIGITA)), size = 2) +
geom_vline(aes(xintercept = DT_DIGITA, colour = factor(DT_DIGITA)), linetype = "dashed", size = 0.5, alpha = 0.5) +
geom_text(aes(x = DT_DIGITA - 7, y = 600, label = paste0("Data of report:\n", DT_DIGITA), colour = factor(DT_DIGITA)), size = 6) +
scale_x_date(date_labels = "%d/%B") +
scale_colour_viridis_d(direction = -1) +
labs(x = "Data do Óbito", y = "Número de Óbitos",
colour = "Data do Boletim",
title = "Evolução de Óbitos por Data de Óbito",
subtitle = "Observatório COVID19 BR; covid19br.github.io",
caption = "Fonte: Boletins Epidemiológicos do Ministério da Saúde e SIVEP-Gripe") +
#xlim(min(dt.plot$Data), max(dt.plot$Data) + 15) +
#ylim(0, 330) +
theme_cowplot() +
theme(legend.position = "none",
plot.title = element_text(hjust = 0.5, size = 22),
plot.subtitle = element_text(hjust = 0.5, size = 18),
axis.text.x = element_text(size = 16),
axis.text.y = element_text(size = 16),
axis.title.x = element_text(size = 18, face = "bold"),
axis.title.y = element_text(size = 18, face = "bold"),) +
transition_states(factor(DT_DIGITA)) +
shadow_mark(colour = "lightgrey", alpha = 0.5, size = 1, exclude_layer = c(2, 3))
animate(nowc,
duration = 30,
end_pause = 7,
width = 800,
height = 800)
nowc
dados$n
max(dados$n)
nowc <-
ggplot(data = dados) +
geom_line(aes(x = DT_SIN_PRI, y = n, colour = factor(DT_DIGITA)), size = 2) +
geom_vline(aes(xintercept = DT_DIGITA, colour = factor(DT_DIGITA)), linetype = "dashed", size = 0.5, alpha = 0.5) +
geom_text(aes(x = DT_DIGITA - 7, y = 60, label = paste0("Data of report:\n", DT_DIGITA), colour = factor(DT_DIGITA)), size = 6) +
scale_x_date(date_labels = "%d/%B") +
scale_colour_viridis_d(direction = -1) +
labs(x = "Data do Óbito", y = "Número de Óbitos",
colour = "Data do Boletim",
title = "Evolução de Óbitos por Data de Óbito",
subtitle = "Observatório COVID19 BR; covid19br.github.io",
caption = "Fonte: Boletins Epidemiológicos do Ministério da Saúde e SIVEP-Gripe") +
#xlim(min(dt.plot$Data), max(dt.plot$Data) + 15) +
#ylim(0, 330) +
theme_cowplot() +
theme(legend.position = "none",
plot.title = element_text(hjust = 0.5, size = 22),
plot.subtitle = element_text(hjust = 0.5, size = 18),
axis.text.x = element_text(size = 16),
axis.text.y = element_text(size = 16),
axis.title.x = element_text(size = 18, face = "bold"),
axis.title.y = element_text(size = 18, face = "bold"))
nowc
rmarkdown::render("gif_case_BH.Rmd")
install.packages("gifski")
nowc <-
ggplot(data = dados) +
geom_line(aes(x = DT_SIN_PRI, y = n, colour = factor(DT_SIN_PRI)), size = 2) +
geom_vline(aes(xintercept = DT_SIN_PRI, colour = factor(DT_SIN_PRI)), linetype = "dashed", size = 0.5, alpha = 0.5) +
geom_text(aes(x = DT_SIN_PRI - 7, y = 50, label = paste0("Data of report:\n", DT_SIN_PRI), colour = factor(DT_SIN_PRI)), size = 6) +
scale_x_date(date_labels = "%d/%B") +
scale_colour_viridis_d(direction = -1) +
labs(x = "Date of onset of symptons",
y = "N of Cases",
colour = "Data of report",
# title = "Evolução de Óbitos por Data de Óbito",
# subtitle = "Observatório COVID19 BR; covid19br.github.io",
# caption = "Fonte: Boletins Epidemiológicos do Ministério da Saúde e SIVEP-Gripe"
) +
theme_cowplot() +
theme(legend.position = "none",
plot.title = element_text(hjust = 0.5, size = 22),
plot.subtitle = element_text(hjust = 0.5, size = 18),
axis.text.x = element_text(size = 16),
axis.text.y = element_text(size = 16),
axis.title.x = element_text(size = 18, face = "bold"),
axis.title.y = element_text(size = 18, face = "bold"))
nowc
nowc <-
ggplot(data = dados) +
geom_line(aes(x = DT_SIN_PRI, y = n, colour = factor(DT_SIN_PRI)), size = 2) +
# geom_vline(aes(xintercept = DT_SIN_PRI, colour = factor(DT_SIN_PRI)), linetype = "dashed", size = 0.5, alpha = 0.5) +
# geom_text(aes(x = DT_SIN_PRI - 7, y = 50, label = paste0("Data of report:\n", DT_SIN_PRI), colour = factor(DT_SIN_PRI)), size = 6) +
scale_x_date(date_labels = "%d/%B") +
scale_colour_viridis_d(direction = -1) +
labs(x = "Date of onset of symptons",
y = "N of Cases",
colour = "Data of report",
# title = "Evolução de Óbitos por Data de Óbito",
# subtitle = "Observatório COVID19 BR; covid19br.github.io",
# caption = "Fonte: Boletins Epidemiológicos do Ministério da Saúde e SIVEP-Gripe"
) +
theme_cowplot() +
theme(legend.position = "none",
plot.title = element_text(hjust = 0.5, size = 22),
plot.subtitle = element_text(hjust = 0.5, size = 18),
axis.text.x = element_text(size = 16),
axis.text.y = element_text(size = 16),
axis.title.x = element_text(size = 18, face = "bold"),
axis.title.y = element_text(size = 18, face = "bold"))
nowc
dados <- sragBH |>
group_by(DT_SIN_PRI) |>
summarise(n= n())
dados_melt<-reshape2::melt(dados , .id = "DT_SIN_PRI")
View(dados_melt)
dados_melt<-reshape2::melt(dados , id.vars = "DT_SIN_PRI")
View(dados_melt)
dados_melt<-reshape2::melt(dados , id.vars = "DT_SIN_PRI")
View(dados_melt)
dados <- sragBH |>
group_by(DT_SIN_PRI, DT_DIGITA) |>
summarise(n= n())
View(dados)
nowc <-dados |>
filter(DT_SIN_PRI <= "2020-10-01")
View(nowc)
nowc <-dados |>
filter(DT_SIN_PRI <= "2020-10-01", DT_SIN_PRI >= "2020-01-01")
View(nowc)
end.of.epiweek <- function(x, end = 6) {
offset <- (end - 4) %% 7
num.x <- as.numeric(x)
return(x - (num.x %% 7) + offset + ifelse(num.x %% 7 > offset, 7, 0))
}
dados <- sragBH |>
mutate(week_onset = end.of.epiweek(DT_SIN_PRI),
week_report = end.of.epiweek(DT_DIGITA)) |>
group_by(week_onset, week_report) |>
summarise(n= n())
View(dados)
library(nowcaster)
# Loading Belo Horizonte SARI dataset
data(sragBH)
nowcasting_bh_no_age <- nowcasting_inla(dataset = sragBH,
date_onset = "DT_SIN_PRI",
date_report = "DT_DIGITA",
data.by.week = T)
head(nowcasting_bh_no_age$total)
library(ggplot2)
library(dplyr)
dados_by_week <- nowcasting_bh_no_age$data |>
ungroup() |>
dplyr::filter(date_onset >= max(date_onset)-270)
dados_by_week |>
ggplot()+
geom_line(data = dados_by_week,
aes(date_onset,
y = observed,
col = 'Observed'))+
theme_bw()+
theme(legend.position = "bottom",
axis.text.x = element_text(angle = 90)) +
scale_color_manual(values = c('grey50', 'black'),
name = '')+
scale_x_date(date_breaks = '2 weeks',
date_labels = '%V/%y',
name = 'Date in Weeks')+
labs(x = '',
y = 'Nº Cases')
nowcasting_bh_no_age$total |>
ggplot(aes(x = dt_event, y = Median,
col = 'Nowcasting')) +
geom_line(data = dados_by_week,
aes(date_onset,
y = observed,
col = 'Observed'))+
geom_ribbon(aes(ymin = LI, ymax = LS, col = NA),
alpha = 0.2,
show.legend = F)+
geom_line()+
theme_bw()+
theme(legend.position = "bottom",
axis.text.x = element_text(angle = 90)) +
scale_color_manual(values = c('grey50', 'black'),
name = '')+
scale_x_date(date_breaks = '2 weeks',
date_labels = '%V/%y',
name = 'Date in Weeks')+
labs(x = '',
y = 'Nº Cases')
library(tidyverse)
library(lubridate)
library(nowcaster)
## To see Nowcasting as if we were on the verge of rise in the curve
data("sragBH")
srag_now<-sragBH |>
filter(DT_DIGITA <= "2020-07-04")
data_by_week<-data.w_no_age(dataset = srag_now,
date_onset = DT_SIN_PRI,
date_report = DT_DIGITA) |>
group_by(date_onset) |>
tally()
data_by_week |>
ggplot(aes(x = date_onset,
y = n))+
geom_line()+
theme_bw()+
labs(x = 'Date of onset of symptons',
y = 'Nº Cases')+
scale_color_manual(values = c('grey50', 'black'),
name = '')+
scale_x_date(date_breaks = '2 weeks',
date_labels = '%V/%y',
name = 'Date in Weeks')
nowcasting_bh_no_age <- nowcasting_inla(dataset = srag_now,
date_onset = DT_SIN_PRI,
date_report = DT_DIGITA,
data.by.week = T)
head(nowcasting_bh_no_age$data)
nowcasting_bh_no_age$total %>%
ggplot(aes(x = dt_event, y = Median, col = 'Nowcasting')) +
geom_line(data = dados_by_week,
aes(date_onset, y = observed, col = 'Observed'))+
geom_ribbon(aes(ymin = LI, ymax = LS, col = NA),
alpha = 0.2,
show.legend = F)+
geom_line()+
geom_line( data = sragBH %>%
filter(DT_SIN_PRI <= "2020-07-04") %>%
mutate(
D_SIN_PRI_2 = DT_SIN_PRI - as.numeric(format(DT_SIN_PRI, "%w"))
) %>%
group_by(D_SIN_PRI_2) %>%
tally(),
mapping = aes(x = D_SIN_PRI_2, y = n,
color = "Observed after one year")) +
theme_bw() +
theme(legend.position = "bottom",
axis.text.x = element_text(angle = 90)) +
scale_color_manual(values = c('grey50', 'black', 'red'),
name = '')+
scale_x_date(date_breaks = '2 weeks',
date_labels = '%V/%y',
name = 'Date in Weeks')+
labs(x = '',
y = 'Nº Cases')
library(ggplot2)
dados_by_week <- nowcasting_bh_no_age$data
nowcasting_bh_no_age$total |>
ggplot(aes(x = dt_event, y = Median,
col = 'Nowcasting')) +
geom_line(data = dados_by_week,
aes(date_onset, y = observed,
col = 'Observed'))+
geom_ribbon(aes(ymin = LI, ymax = LS, col = NA),
alpha = 0.2,
show.legend = F)+
geom_line()+
theme_bw()+
theme(legend.position = "bottom",
axis.text.x = element_text(angle = 90)) +
scale_color_manual(values = c('grey50', 'black'),
name = '')+
scale_x_date(date_breaks = '2 weeks',
date_labels = '%V/%y',
name = 'Date in Weeks')+
labs(x = '',
y = 'Nº Cases')
nowcasting_bh_no_age$total %>%
ggplot(aes(x = dt_event, y = Median, col = 'Nowcasting')) +
geom_line(data = dados_by_week,
aes(date_onset, y = observed, col = 'Observed'))+
geom_ribbon(aes(ymin = LI, ymax = LS, col = NA),
alpha = 0.2,
show.legend = F)+
geom_line()+
geom_line( data = sragBH %>%
filter(DT_SIN_PRI <= "2020-07-04") %>%
mutate(
D_SIN_PRI_2 = DT_SIN_PRI - as.numeric(format(DT_SIN_PRI, "%w"))
) %>%
group_by(D_SIN_PRI_2) %>%
tally(),
mapping = aes(x = D_SIN_PRI_2, y = n,
color = "Observed after one year")) +
theme_bw() +
theme(legend.position = "bottom",
axis.text.x = element_text(angle = 90)) +
scale_color_manual(values = c('grey50', 'black', 'red'),
name = '')+
scale_x_date(date_breaks = '2 weeks',
date_labels = '%V/%y',
name = 'Date in Weeks')+
labs(x = '',
y = 'Nº Cases')
# install.packages("remotes") # Uncomment if you do not have the 'remotes' package installed
remotes::install_github("koenderks/rcityviews", dependencies = TRUE)
library(rcityviews)
list_cities(match = "Ams")
# [1] "Amstelveen" "Amsterdam" "Amstetten" "New Amsterdam" "Nieuw Amsterdam"
p <- cityview(name = "Amsterdam", zoom = 1)
# see ?cityview for more input parameters of this function
p
